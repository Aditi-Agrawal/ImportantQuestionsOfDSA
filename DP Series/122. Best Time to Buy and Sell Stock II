class Solution {
    
    public int maxProfit(int[] prices) {
        HashMap<String, Integer> hashmap = new HashMap<>();
        return helper(prices, 0, 0, hashmap);
    }
    
    private int helper(int[] prices, int i, int buyOrSell, HashMap<String, Integer> hashmap){
        if(i>=prices.length){
            return 0;
        }
        String key = i+"aditi"+buyOrSell;
        if(hashmap.containsKey(key)){
            return hashmap.get(key);
        }
        int profit = 0;
        if(buyOrSell == 0){
            int buy = helper(prices, i+1, 1, hashmap) - prices[i];
            int notBuy = helper(prices, i+1, 0, hashmap);
            profit = Math.max(buy, notBuy);
        }
        else{
            int sell = helper(prices, i+1, 0, hashmap) + prices[i];
            int notSell = helper(prices, i+1, 1, hashmap);
            profit = Math.max(sell, notSell);
        }
        hashmap.put(key,profit);
        return profit;
    }
}
